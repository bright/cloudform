import Account_ from './account';
import ApiKey_ from './apiKey';
import Authorizer_ from './authorizer';
import BasePathMapping_ from './basePathMapping';
import ClientCertificate_ from './clientCertificate';
import Deployment_ from './deployment';
import DocumentationPart_ from './documentationPart';
import DocumentationVersion_ from './documentationVersion';
import DomainName_ from './domainName';
import GatewayResponse_ from './gatewayResponse';
import Method_ from './method';
import Model_ from './model';
import RequestValidator_ from './requestValidator';
import Resource_ from './resource';
import RestApi_ from './restApi';
import Stage_ from './stage';
import UsagePlan_ from './usagePlan';
import UsagePlanKey_ from './usagePlanKey';
import VpcLink_ from './vpcLink';
export declare namespace ApiGateway {
    const Account: typeof Account_;
    const ApiKey: typeof ApiKey_;
    const Authorizer: typeof Authorizer_;
    const BasePathMapping: typeof BasePathMapping_;
    const ClientCertificate: typeof ClientCertificate_;
    const Deployment: typeof Deployment_;
    const DocumentationPart: typeof DocumentationPart_;
    const DocumentationVersion: typeof DocumentationVersion_;
    const DomainName: typeof DomainName_;
    const GatewayResponse: typeof GatewayResponse_;
    const Method: typeof Method_;
    const Model: typeof Model_;
    const RequestValidator: typeof RequestValidator_;
    const Resource: typeof Resource_;
    const RestApi: typeof RestApi_;
    const Stage: typeof Stage_;
    const UsagePlan: typeof UsagePlan_;
    const UsagePlanKey: typeof UsagePlanKey_;
    const VpcLink: typeof VpcLink_;
    type Account = Account_;
    type ApiKey = ApiKey_;
    type Authorizer = Authorizer_;
    type BasePathMapping = BasePathMapping_;
    type ClientCertificate = ClientCertificate_;
    type Deployment = Deployment_;
    type DocumentationPart = DocumentationPart_;
    type DocumentationVersion = DocumentationVersion_;
    type DomainName = DomainName_;
    type GatewayResponse = GatewayResponse_;
    type Method = Method_;
    type Model = Model_;
    type RequestValidator = RequestValidator_;
    type Resource = Resource_;
    type RestApi = RestApi_;
    type Stage = Stage_;
    type UsagePlan = UsagePlan_;
    type UsagePlanKey = UsagePlanKey_;
    type VpcLink = VpcLink_;
}
