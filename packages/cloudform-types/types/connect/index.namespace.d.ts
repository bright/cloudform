import ApprovedOrigin_ from './approvedOrigin';
import ContactFlow_ from './contactFlow';
import ContactFlowModule_ from './contactFlowModule';
import EvaluationForm_ from './evaluationForm';
import HoursOfOperation_ from './hoursOfOperation';
import Instance_ from './instance';
import InstanceStorageConfig_ from './instanceStorageConfig';
import IntegrationAssociation_ from './integrationAssociation';
import PhoneNumber_ from './phoneNumber';
import Prompt_ from './prompt';
import Queue_ from './queue';
import QuickConnect_ from './quickConnect';
import RoutingProfile_ from './routingProfile';
import Rule_ from './rule';
import SecurityKey_ from './securityKey';
import SecurityProfile_ from './securityProfile';
import TaskTemplate_ from './taskTemplate';
import User_ from './user';
import UserHierarchyGroup_ from './userHierarchyGroup';
import View_ from './view';
import ViewVersion_ from './viewVersion';
import TrafficDistributionGroup_ from './trafficDistributionGroup';
export declare namespace Connect {
    const ApprovedOrigin: typeof ApprovedOrigin_;
    const ContactFlow: typeof ContactFlow_;
    const ContactFlowModule: typeof ContactFlowModule_;
    const EvaluationForm: typeof EvaluationForm_;
    const HoursOfOperation: typeof HoursOfOperation_;
    const Instance: typeof Instance_;
    const InstanceStorageConfig: typeof InstanceStorageConfig_;
    const IntegrationAssociation: typeof IntegrationAssociation_;
    const PhoneNumber: typeof PhoneNumber_;
    const Prompt: typeof Prompt_;
    const Queue: typeof Queue_;
    const QuickConnect: typeof QuickConnect_;
    const RoutingProfile: typeof RoutingProfile_;
    const Rule: typeof Rule_;
    const SecurityKey: typeof SecurityKey_;
    const SecurityProfile: typeof SecurityProfile_;
    const TaskTemplate: typeof TaskTemplate_;
    const User: typeof User_;
    const UserHierarchyGroup: typeof UserHierarchyGroup_;
    const View: typeof View_;
    const ViewVersion: typeof ViewVersion_;
    const TrafficDistributionGroup: typeof TrafficDistributionGroup_;
    type ApprovedOrigin = ApprovedOrigin_;
    type ContactFlow = ContactFlow_;
    type ContactFlowModule = ContactFlowModule_;
    type EvaluationForm = EvaluationForm_;
    type HoursOfOperation = HoursOfOperation_;
    type Instance = Instance_;
    type InstanceStorageConfig = InstanceStorageConfig_;
    type IntegrationAssociation = IntegrationAssociation_;
    type PhoneNumber = PhoneNumber_;
    type Prompt = Prompt_;
    type Queue = Queue_;
    type QuickConnect = QuickConnect_;
    type RoutingProfile = RoutingProfile_;
    type Rule = Rule_;
    type SecurityKey = SecurityKey_;
    type SecurityProfile = SecurityProfile_;
    type TaskTemplate = TaskTemplate_;
    type User = User_;
    type UserHierarchyGroup = UserHierarchyGroup_;
    type View = View_;
    type ViewVersion = ViewVersion_;
    type TrafficDistributionGroup = TrafficDistributionGroup_;
}
